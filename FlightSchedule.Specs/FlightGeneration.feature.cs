// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.42000
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace FlightSchedule.Specs
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("FlightGeneration")]
    public partial class FlightGenerationFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "FlightGeneration.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "FlightGeneration", "In order to generate my flights easily & time-efficient\nAs a agency manager\nI wan" +
                    "t to be able to generate flights in batch from schedule", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Generate flights from weekly flight plan")]
        [NUnit.Framework.CategoryAttribute("mytag")]
        public virtual void GenerateFlightsFromWeeklyFlightPlan()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Generate flights from weekly flight plan", new string[] {
                        "mytag"});
#line 7
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Aircraft",
                        "FlightNo",
                        "Origin",
                        "Destination",
                        "StartReserveDate",
                        "EndReserveDate"});
            table1.AddRow(new string[] {
                        "Airbus-W350",
                        "WS-2040",
                        "IKA",
                        "FRA",
                        "2018-03-17",
                        "2018-04-01"});
#line 8
 testRunner.Given("I have reserved a flight with following information", ((string)(null)), table1, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Day",
                        "DepartTime"});
            table2.AddRow(new string[] {
                        "Monday",
                        "08:00"});
            table2.AddRow(new string[] {
                        "Wednesday",
                        "17:00"});
#line 11
 testRunner.And("I have entered the following weekly flight schedule", ((string)(null)), table2, "And ");
#line 15
  testRunner.When("I press generate", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "DepartDate",
                        "Aircraft",
                        "FlightNo",
                        "Origin",
                        "Destination"});
            table3.AddRow(new string[] {
                        "2018-03-19",
                        "Airbus-W350",
                        "WS-2040",
                        "IKA",
                        "FRA"});
            table3.AddRow(new string[] {
                        "2018-03-21",
                        "Airbus-W350",
                        "WS-2040",
                        "IKA",
                        "FRA"});
            table3.AddRow(new string[] {
                        "2018-03-26",
                        "Airbus-W350",
                        "WS-2040",
                        "IKA",
                        "FRA"});
            table3.AddRow(new string[] {
                        "2018-03-28",
                        "Airbus-W350",
                        "WS-2040",
                        "IKA",
                        "FRA"});
#line 16
  testRunner.Then("The following flights should be generated", ((string)(null)), table3, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
